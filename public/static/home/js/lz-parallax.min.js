!function (a) { "function" == typeof define && define.amd ? define(["jquery"], a) : a(jQuery) }(function (a) { "use strict"; var c, d, e, f; a.extend({ isLzString: function (a) { return "[object String]" === Object.prototype.toString.call(a) }, isLzObject: function (a) { return "[object Object]" === Object.prototype.toString.call(a) }, isLzNumber: function (a) { return "[object Number]" === Object.prototype.toString.call(a) }, isLzWindow: function (a) { return "[object Window]" === Object.prototype.toString.call(a) }, isLzBrowser: function () { var b, a = navigator.userAgent, c = a.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || []; return /trident/i.test(c[1]) ? (b = /\brv[ :]+(\d+)/g.exec(a) || [], ["IE ", b[1] || ""]) : "Chrome" === c[1] && (b = a.match(/\b(OPR|Edge)\/(\d+)/), null != b) ? b.slice(1) : (c = c[2] ? [c[1], c[2]] : [navigator.appName, navigator.appVersion, "-?"], null != (b = a.match(/version\/(\d+)/i)) && c.splice(1, 1, b[1]), c) }, isPC: function () { var d, a = navigator.userAgent, b = new Array("Android", "iPhone", "SymbianOS", "Windows Phone", "iPad", "iPod"), c = !0; for (d = 0; d < b.length; d++)if (a.indexOf(b[d]) > 0) { c = !1; break } return c } }), c = function (b) { var c = this; c.$ele = a(b), c.param = c.$ele.data("lzparallax-param"), c.status = c.$ele.data("lzparallax-status"), c.methods = c.$ele.data("lzparallaxMethods") }, c.prototype = { constructor: c, setEvent: function () { var b = this, c = this.param; a.each(c.event, function (a, c) { b[c] && b[c]() }) }, scroll: function () { var b = this.methods; b.$scrollBox.on("scroll.lzParallax", function () { b._movePosition() }) }, mouseEnter: function () { var a = this, b = a.methods, c = a.param, d = a.$ele; b.$ele.off("mouseenter.lzparallax").on("mouseenter.lzparallax", function () { d.children(".lz-parallax-bg").find(".lz-parallax-bg-img").addClass(c.hoverClass) }).off("mouseleave.lzparallax").on("mouseleave.lzparallax", function () { d.children(".lz-parallax-bg").find(".lz-parallax-bg-img").removeClass(c.hoverClass) }) }, resize: function () { var b = this, c = b.methods, e = (b.param, b.status); b.$ele, a(window).resize(function () { c._getWindowSize(), c._getBoxSize(), c._getBoxPosition(), c.$ele.children(".lz-parallax-bg").find(".lz-parallax-bg-inner").css({ left: e.boxPosition[0], width: e.boxSize[0] }), c._movePosition() }) } }, d = function (b) { var c = this; c.$ele = a(b), c.param = c.$ele.data("lzparallax-param"), c.status = c.$ele.data("lzparallax-status"), c.lzparallax = c.$ele.data("lzparallax"), c.lzparallax.$dom = c.$ele }, d.prototype = { constructor: d, _clone: function () { var g, h, c = this, d = c.$ele, e = c.param, f = c.lzparallax; f.$dom && (d = c.$ele = f.$dom), a.isLzObject(e) && e.clone && (g = "<div class='lz-parallax-bg_clone'></div>", d.children(".lz-parallax-bg_clone").remove(), d.prepend(g), "static" == d.css("position") && d.css("position", "relative"), h = d.children(".lz-parallax-bg_clone"), h.css(d.css(["backgroundImage", "backgroundPosition", "backgroundRepeat", "backgroundSize", "backgroundColor", "margin", "padding", "minWidth", "maxWidth", "minHeight", "maxHeight"])).css({ position: "absolute", left: 0, right: 0, top: "-1px", bottom: "-1px", zIndex: "0", "pointer-events": "none" }), d.css("background", "none"), c.$ele = f.$ele = h, c.$ele.data({ "lzparallax-param": c.param, "lzparallax-status": c.status, lzparallax: c.lzparallax, lzparallaxMethods: this })) }, _getWindowSize: function () { var b = this.status; b.windowSize = [a(window).width(), a(window).height()] }, _findScroll: function () { for (var b = this, c = b.$ele.parent(); ;) { if ("auto" == c.css("overflow") || "scroll" == c.css("overflow") || 0 !== c.children(".lz-scrollBar").size() || "BODY" === c[0].tagName) break; c = c.parent() } b.$scrollBox = "BODY" === c[0].tagName ? a(window) : c }, _cleartransform: function () { var a = this, b = a.$ele; for (a.$ele[0].transformDom = []; ;) { if ("BODY" === b[0].tagName) break; b = b.parent(), "none" != b.css("transform") && (a.el.transformDom.push({ dom: b, val: b.css("transform") }), b.css({ transform: "none" })) } }, _getBoxSize: function () { var a = this; a.status.boxSize = [a.$ele.outerWidth(), a.$ele.outerHeight()] }, _getBoxPosition: function () { var a = this, b = a.status, c = a.param.autoPosition; null == c && (c = !0), b.boxPosition = [c ? a.$ele.offset().left - a.$scrollBox.scrollLeft() : "", a.$ele.offset().top - a.$scrollBox.scrollTop()] }, _getImgHeight: function () { var a = this, d = (a.status, a.$scrollBox[0], a.param); "scroll" == d.effect ? a.$ele.children(".lz-parallax-bg").find(".lz-parallax-bg-img").css("height", "120%") : a.$ele.children(".lz-parallax-bg").find(".lz-parallax-bg-img").css({ height: "100%", top: 0 }) }, _displayImage: function () { var d, a = this, b = a.status, c = a.param; void 0 === b.stopEvent && (b.stopEvent = c.stopEvent), b.stopEvent === !0 && (a.$ele.children(".lz-parallax-bg").css({ clip: "", overflow: "hidden" }), a.$ele.children(".lz-parallax-bg").find(".lz-parallax-bg-inner").css({ position: "absolute", height: b.windowSize[1], top: -b.boxPosition[1] }), b.imgMin = !0, d = a.$ele.offset().top, a.$scrollBox.on("scroll", function () { a.$ele.children(".lz-parallax-bg").find(".lz-parallax-bg-inner").css({ top: -(d - a.$scrollBox.scrollTop()) }) })) }, _setDisplayImagePosition: function () { var a = this, b = a.status; a.param, a.$ele.children(".lz-parallax-bg").find(".lz-parallax-bg-inner").css({ top: -b.boxPosition[1] }) }, _getMoveSize: function () { var e, b = this, c = b.status, d = b.param; return "fixed" == d.effect ? !1 : (e = a(document).height() - (b.$scrollBox.scrollTop() + c.windowSize[1]), c.initPositionFlag && (c.boxPosition[1] < c.windowSize[1] && c.boxPosition[1] + c.boxSize[1] < e && (c.pageScrollHeight = c.boxPosition[1] + c.boxSize[1]), c.boxPosition[1] + c.boxSize[1] >= e && (c.pageScrollHeight = e), c.boxPosition[1] > c.windowSize[1] && c.boxPosition[1] + c.boxSize[1] < e && (c.pageScrollHeight = c.windowSize[1] + c.boxSize[1]), c.initPosition = c.boxPosition[1]), c.goMove = .2 * c.windowSize[1] / c.pageScrollHeight * (c.initPosition - c.boxPosition[1]), c.initPositionFlag && (c.goMove = 0), void 0) }, _movePosition: function () { var b = this, c = b.param, d = b.status; b._getBoxPosition(), b._getMoveSize(), "Safari" != a.isLzBrowser()[0] && b.$ele.children(".lz-parallax-bg").css({ clip: "rect(0 " + d.boxSize[0] + "px " + d.boxSize[1] + "px 0)", overflow: "" }), "scroll" == c.effect && d.boxPosition[1] <= d.windowSize[1] && d.boxPosition[1] >= -d.boxSize[1] && (b.$ele.children(".lz-parallax-bg").find(".lz-parallax-bg-img").css("transform", "translate(0px," + -d.goMove + "px"), d.initPositionFlag = !1) }, _saveBg: function () { var b = this, c = b.status; c.bgVal["backgroundImage"] || (c.bgVal = { backgroundImage: b.$ele.css("backgroundImage"), backgroundPosition: b.$ele.css("backgroundPosition"), backgroundRepeat: b.$ele.css("backgroundRepeat"), backgroundSize: b.$ele.css("backgroundSize"), backgroundColor: b.$ele.css("backgroundColor") }, b.$ele.css("backgroundImage", "none")) }, _layout: function () { var d, a = this, b = a.$ele.data("lzparallax-status"), c = "<div class='lz-parallax-content' style='position:relative;top:0;left:0;width:100%;height:100%;z-index:10'></div><div class='lz-parallax-bg' style='position:absolute;top:0;left:0;right:0;bottom:0;-webkit-clip-path: border-box;overflow:hidden'><div class='lz-parallax-bg-inner' style='position:fixed;top:0;left:" + b.boxPosition[0] + "px;width:" + b.boxSize[0] + "px;bottom:0;z-index:-1;pointer-events:none'>" + "<div class='lz-parallax-bg-img' style='position:absolute;width:100%;pointer-events:none'></div>" + "</div>" + "</div>"; a.$ele.children(".lz-parallax-content,.lz-parallax-bg").remove(), d = a.$ele.children(), a.$ele.html(c), "static" == a.$ele.css("position") && a.$ele.css("position", "relative"), a.$ele.children(".lz-parallax-content").prepend(d), a.$ele.children(".lz-parallax-bg").find(".lz-parallax-bg-img").css(b.bgVal) } }, e = function (b) { var c = this; c.$ele = a(b), c.$ele.data("lzparallax-status", { bgVal: [], boxPosition: [], windowSize: [], boxSize: [], initPosition: 0, bgTop: 0, goToS: 0, initPositionFlag: !0 }), c.status = c.$ele.data("lzparallax-status") }, e.prototype = { constructor: e, defaults: { hoverClass: "", effect: "scroll", autoPosition: !1, clone: !1, stopEvent: !1, event: ["scroll", "mouseEnter", "resize"] }, _initParam: function (b) { var c = this.defaults; return a.isLzObject(b) && (c = a.extend({}, c, b)), c }, _initLayout: function () { var d, a = this, b = a.$ele.data("lzparallax-param"), c = a.$ele.data("lzparallaxMethods"); ("fixed" == b.effect || "scroll" == b.effect) && (a.status.initPositionFlag = !0, c._clone(), c._findScroll(), c._cleartransform(), c._getWindowSize(), c._getBoxSize(), c._getBoxPosition(), c._saveBg(), c._layout(), d = c.$scrollBox.scrollTop(), c.$scrollBox.scrollTop(a.$ele.offset().top < a.status.windowSize[1] < 0 ? 0 : a.$ele.offset().top - a.status.windowSize[1]), c._getImgHeight(), c._movePosition(), c._displayImage(), c.$scrollBox.scrollTop(d)) }, _initEvent: function () { var b = this, d = this.$ele; b.event = d.data("lzparallaxEvent"), b.event || (b.event = new c(d), d.data("lzparallaxEvent", b.event)), b.event.setEvent() }, _init: function (a) { var e, b = this, c = b.$ele; b.$ele.data("lzparallax-param", this._initParam(a)), e = b.$ele.data("lzparallax-param"), b.methods = b.$ele.data("lzparallaxMethods"), b.methods || (b.methods = new d(c), b.$ele.data("lzparallaxMethods", b.methods)), b._initLayout(), !e.stopEvent && ("fixed" == e.effect || "scroll" == e.effect) && (b._initEvent(), e.stopEvent = !0) } }, f = function (b) { var c = this; c.$ele = a(b), c.status = c.$ele.data("lzparallax-status"), c.param = c.$ele.data("lzparallax-param"), c.lzparallax = c.$ele.data("lzparallax"), c.methods = c.$ele.data("lzparallaxMethods") }, f.prototype = { constructor: f, refresh: function (a, b) { var c = this, d = c.lzparallax, e = c.$ele, f = a, g = c.param; return a = c.status, "none" == f ? (e.children(".lz-parallax-bg_clone").remove(), e.children(".lz-parallax-content,.lz-parallax-bg").remove(), b ? a.bgVal = {} : e.css(a.bgVal), d.$ele = c.methods.$ele = d.$dom, !1) : ("none" != c.$ele.css("backgroundImage") && (c.status.bgVal = {}), null != f && (c.param.effect = f), d._initLayout(), !g.stopEvent && ("fixed" == g.effect || "scroll" == g.effect) && (d._initEvent(), g.stopEvent = !0), void 0) }, imgTop: function () { _me.status.imgMin && _me._setDisplayImagePosition() } }, a.fn.lzparallax = function (b, c, d) { var i, g = new RegExp(/IE|Edge/g), h = a.isLzBrowser(), j = !1; return g.test(h[0]) && (j = !0), i = a.isLzString(c) ? c : a.isLzObject(b) ? b.effect : "", a.isLzObject(b) && a.isLzNumber(b.effect) && (b.effect = b.effect > 0 && b.effect < 1 ? "scroll" : 0 == b.effect ? "fixed" : ""), !j && a.isPC() ? a(this).each(function (g, h) { var i, j; 0 == a(h).closest(".w-fullpage-wrap").size() && (i = a(h).data("lzparallax"), i || (a.isLzObject(b) && (c = b), i = new e(h, c), a(h).data("lzparallax", i)), a.isLzObject(b) ? i._init(b) : a.isLzString(b) && (j = a(h).data("lzparallaxTool"), j || (j = new f(h), a(h).data("lzparallaxTool", j)), !!j[b] && j[b](c, d))) }) : a(this) } });